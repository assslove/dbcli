// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: limit.proto

#ifndef PROTOBUF_limit_2eproto__INCLUDED
#define PROTOBUF_limit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace db_proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_limit_2eproto();
void protobuf_AssignDesc_limit_2eproto();
void protobuf_ShutdownFile_limit_2eproto();

class MLimit;
class MLimitlist;

// ===================================================================

class MLimit : public ::google::protobuf::Message {
 public:
  MLimit();
  virtual ~MLimit();

  MLimit(const MLimit& from);

  inline MLimit& operator=(const MLimit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MLimit& default_instance();

  void Swap(MLimit* other);

  // implements Message ----------------------------------------------

  MLimit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MLimit& from);
  void MergeFrom(const MLimit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:db_proto.MLimit)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;
  friend void  protobuf_AddDesc_limit_2eproto();
  friend void protobuf_AssignDesc_limit_2eproto();
  friend void protobuf_ShutdownFile_limit_2eproto();

  void InitAsDefaultInstance();
  static MLimit* default_instance_;
};
// -------------------------------------------------------------------

class MLimitlist : public ::google::protobuf::Message {
 public:
  MLimitlist();
  virtual ~MLimitlist();

  MLimitlist(const MLimitlist& from);

  inline MLimitlist& operator=(const MLimitlist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MLimitlist& default_instance();

  void Swap(MLimitlist* other);

  // implements Message ----------------------------------------------

  MLimitlist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MLimitlist& from);
  void MergeFrom(const MLimitlist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .db_proto.MLimit limit = 1;
  inline int limit_size() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 1;
  inline const ::db_proto::MLimit& limit(int index) const;
  inline ::db_proto::MLimit* mutable_limit(int index);
  inline ::db_proto::MLimit* add_limit();
  inline const ::google::protobuf::RepeatedPtrField< ::db_proto::MLimit >&
      limit() const;
  inline ::google::protobuf::RepeatedPtrField< ::db_proto::MLimit >*
      mutable_limit();

  // @@protoc_insertion_point(class_scope:db_proto.MLimitlist)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::db_proto::MLimit > limit_;
  friend void  protobuf_AddDesc_limit_2eproto();
  friend void protobuf_AssignDesc_limit_2eproto();
  friend void protobuf_ShutdownFile_limit_2eproto();

  void InitAsDefaultInstance();
  static MLimitlist* default_instance_;
};
// ===================================================================


// ===================================================================

// MLimit

// required uint32 type = 1;
inline bool MLimit::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MLimit::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MLimit::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MLimit::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MLimit::type() const {
  // @@protoc_insertion_point(field_get:db_proto.MLimit.type)
  return type_;
}
inline void MLimit::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:db_proto.MLimit.type)
}

// required uint32 value = 2;
inline bool MLimit::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MLimit::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MLimit::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MLimit::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 MLimit::value() const {
  // @@protoc_insertion_point(field_get:db_proto.MLimit.value)
  return value_;
}
inline void MLimit::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:db_proto.MLimit.value)
}

// -------------------------------------------------------------------

// MLimitlist

// repeated .db_proto.MLimit limit = 1;
inline int MLimitlist::limit_size() const {
  return limit_.size();
}
inline void MLimitlist::clear_limit() {
  limit_.Clear();
}
inline const ::db_proto::MLimit& MLimitlist::limit(int index) const {
  // @@protoc_insertion_point(field_get:db_proto.MLimitlist.limit)
  return limit_.Get(index);
}
inline ::db_proto::MLimit* MLimitlist::mutable_limit(int index) {
  // @@protoc_insertion_point(field_mutable:db_proto.MLimitlist.limit)
  return limit_.Mutable(index);
}
inline ::db_proto::MLimit* MLimitlist::add_limit() {
  // @@protoc_insertion_point(field_add:db_proto.MLimitlist.limit)
  return limit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::db_proto::MLimit >&
MLimitlist::limit() const {
  // @@protoc_insertion_point(field_list:db_proto.MLimitlist.limit)
  return limit_;
}
inline ::google::protobuf::RepeatedPtrField< ::db_proto::MLimit >*
MLimitlist::mutable_limit() {
  // @@protoc_insertion_point(field_mutable_list:db_proto.MLimitlist.limit)
  return &limit_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace db_proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_limit_2eproto__INCLUDED
